@base <urn:pipeline:cube-creator> .
@prefix : <https://pipeline.described.at/> .
@prefix code: <https://code.described.at/> .

<#Main> a :Pipeline ;
  :variables
    [
      :variable
        [
          :name "executionUrl" ;
          :required false
        ] ;
      :variable
        [
          :name "lastTransformed" ;
          :required false
        ] ;
    ] ;
  :steps
    [
      :stepList
        ( <#concatStreams> <#validate> <#StreamOutput> ) ;
    ] .

<#concatStreams>
  a :Step ;
  code:implementedBy
    [
      a code:EcmaScriptModule ;
      code:link <node:barnard59-base/concat.js#object>
    ] ;
  code:arguments
    (
      <#Observations>
      <#Dimensions>
      <#CubeMetadata>
    )
.

<#Observations>
  a :Pipeline, :ReadableObjectMode ;
  :steps [ :stepList ( <#loadObservations> <#mapDimensions> <#setGraph> ) ] .

<#Dimensions>
  a :Pipeline, :ReadableObjectMode ;
  :steps [ :stepList ( <#loadDimensions> <#setMetadataCollectionGraph> ) ] .

<#CubeMetadata>
  a :Pipeline, :ReadableObjectMode ;
  :steps [ :stepList ( <#loadCubeMetadata> <#setDatasetGraph> ) ] .

<#StreamOutput>
  a :Pipeline, :WritableObjectMode .

<#loadObservations>
  a :Step ;
  code:implementedBy
    [
      code:link <file:../lib/import/cube#default> ;
      a code:EcmaScript ;
    ] ;
  code:arguments
    [
      code:name "cube" ;
      code:value "sourceCube"^^:VariableName
    ],
    [
      code:name "endpoint" ;
      code:value "sourceEndpoint"^^:VariableName
    ],
    [
      code:name "graph" ;
      code:value "sourceGraph"^^:VariableName
    ]
.

<#loadDimensions>
  a :Step ;
  code:implementedBy
    [
      code:link <file:../lib/import/dimensions#default> ;
      a code:EcmaScript ;
    ] ;
  code:arguments
    [
      code:name "cube" ;
      code:value "sourceCube"^^:VariableName
    ],
    [
      code:name "endpoint" ;
      code:value "sourceEndpoint"^^:VariableName
    ],
    [
      code:name "graph" ;
      code:value "sourceGraph"^^:VariableName
    ],
    [
      code:name "metadataResource" ;
      code:value "metadataResource"^^:VariableName
    ]
.

<#mapDimensions>
  a :Step ;
  code:implementedBy
    [
      code:link <file:../lib/output-mapper#mapDimensions> ;
      a code:EcmaScript ;
    ] .

<#loadCubeMetadata>
  a :Step ;
  code:implementedBy
    [
      code:link <file:../lib/import/cubeMetadata#default> ;
      a code:EcmaScript ;
    ] ;
  code:arguments
    [
      code:name "cube" ;
      code:value "sourceCube"^^:VariableName
    ],
    [
      code:name "endpoint" ;
      code:value "sourceEndpoint"^^:VariableName
    ],
    [
      code:name "graph" ;
      code:value "sourceGraph"^^:VariableName
    ],
    [
      code:name "datasetResource" ;
      code:value "datasetResource"^^:VariableName
    ]
.

<#setMetadataCollectionGraph>
  a                  :Step ;
  code:implementedBy [ a         code:EcmaScriptModule ;
                       code:link <node:barnard59-rdf/setGraph.js#default> ] ;
  code:arguments     ( "metadataResource"^^:VariableName ) .

<#setDatasetGraph>
  a                  :Step ;
  code:implementedBy [ a         code:EcmaScriptModule ;
                       code:link <node:barnard59-rdf/setGraph.js#default> ] ;
  code:arguments     ( "datasetResource"^^:VariableName ) .
